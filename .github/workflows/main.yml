name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main  # Triggers the pipeline on pushes to the main branch
  pull_request:
    branches:
      - main  # Triggers the pipeline on pull requests to the main branch

jobs:
  build:
    runs-on: self-hosted  # Uses an Ubuntu environment, which is Debian-based

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Adjust to your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" >> .env
          echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> .env

      - name: Run tests
        run: |
          pytest  # Adjust if you're using another testing framework

  deploy:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file
        run: |
          echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" >> .env
          echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> .env

      - name: Deploy to Server
        env:
          FLASK_ENV: production
          FLASK_APP: app.py  # Change to your entry point file
        run: |
          # Deploy commands go here
          # Example: Run Flask server locally or deploy via SSH/SFTP to your server
          # ssh username@server "cd /path/to/app && git pull && systemctl restart flask-app"

# Trigger of the pipeline
on:
  # Initiate the pipeline when there is a push event in the main branch
  push:
    branches:
      - main

# Global variables
env:
  DOCKERHUB_NAMESPACE: beljjvalentin  # replace this value with your own namespace
  DOCKERHUB_REPOSITORY: flask  # replace this value with your own repository
  IMAGE_VERSION: v1.0.0

jobs:
  # Stage 1: Building the Docker image
  build-docker-image:
    name: Build the application Docker image
    runs-on: self-hosted  # Using the self-hosted runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Clones the project into the working directory

      # This GitHub action handles the authentication with an artifact registry
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t $DOCKERHUB_NAMESPACE/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION -f Dockerfile .
          docker push $DOCKERHUB_NAMESPACE/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION

#  # Stage 2: Unit testing the application
#  test:
#    name: Unit testing of the application
#    needs: [build-docker-image]
#    runs-on: aws-debian-runner-1
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up and run tests in a virtual environment
#        shell: bash
#        run: |
#          # Create a virtual environment in a directory called venv
#          python3 -m venv venv
#
#          # Activate the virtual environment
#          source venv/bin/activate
#
#          # Upgrade pip and install dependencies
#          pip install --upgrade pip
#          pip install flask pytest pymongo
#
#          # Run unit tests
#          pytest tests/

  # Stage 3: Deploy the Docker image
  deploy-docker-image:
    name: Deploy the Flask image
    needs: [build-docker-image]
    runs-on: self-hosted # Using the self-hosted runner
    environment: development  # This tells GitHub where to get the secrets
    steps:
      - name: Remove old container
        run: |
          docker rm -f flask-app-1 || true

      - name: Deploy the image
        # -d runs the container in the background
        run: |
          docker run -d --name flask-app-1 -p 8080:5000 \
          -e MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }} \
          -e MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
          flask-app-1:v1.0.0
        

